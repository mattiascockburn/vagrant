# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# This will create the data hdd in the Vagrant Root. Adjust this if needed
VAGRANT_ROOT = File.dirname(File.expand_path(__FILE__))
second_hdd = File.join(VAGRANT_ROOT, 'spacewalk-data.vdi')
# size in GB
second_hdd_size = 100
DOMAIN='b1.test'

spacewalk = {
    :basebox  => 'boxcutter/centos71',
    :ip       => '10.5.5.100',
    :mem      => 3192,
    :hostname => 'spacewalk',
    :os       => 'centos',
    :hdd_file => second_hdd,
    :hdd_size => second_hdd_size
}
clients = {
  :slesclient => {
    :basebox  => 'sles12',
    :ip       => '10.5.5.201',
    :mem      => 512,
    :hostname => 'sles12',
    :os       => 'sles'
  },

  :centosclient => {
    :basebox  => 'boxcutter/centos71',
    :ip       => '10.5.5.202',
    :mem      => 512,
    :hostname => 'centos71',
    :os       => 'centos'
  }
}


Vagrant.configure(2) do |config|
  config.vm.define "spacewalk", primary: true do |sw|
    sw.vm.box = spacewalk[:basebox]
    sw.vm.hostname = "#{spacewalk[:hostname]}.#{DOMAIN}"
    sw.vm.network "forwarded_port", guest: 80, host: 9080
    sw.vm.network "forwarded_port", guest: 443, host: 9443

    sw.vm.network "private_network", ip: spacewalk[:ip]

    sw.vm.provider "virtualbox" do |vb|
      vb.memory = spacewalk[:mem]
      unless File.exist?(spacewalk[:hdd_file])
        vb.customize ['createhd', '--filename', spacewalk[:hdd_file], '--size', spacewalk[:hdd_size] * 1024]
      end
      vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', spacewalk[:hdd_file]]
    end
    sw.vm.provision "shell", path: 'scripts/common/2nd-hdd-init.sh'
    sw.vm.provision "shell", path: "scripts/#{spacewalk[:os]}/spacewalk-install.sh"
    sw.vm.provision "shell", path: 'scripts/common/spacewalk-sw.sh' 
  end

  clients.each do |node_name, node_config|
    config.vm.define node_name, autostart: false do |node|
      node.vm.hostname = "#{node_config[:hostname]}.#{DOMAIN}"
      node.vm.box = node_config[:basebox]
      node.vm.network "private_network", ip: node_config[:ip]
      node.vm.provider "virtualbox" do |vb|
        vb.memory = node_config[:mem]
      end
      node.vm.provision "shell", path: "scripts/#{node_config[:os]}/client-bootstrap.sh"
    end
  end
end
